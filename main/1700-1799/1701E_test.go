// Generated by copypasta/template/generator_test.go
package main

import (
	. "fmt"
	"github.com/EndlessCheng/codeforces-go/main/testutil"
	"io"
	"testing"
)

// https://codeforces.com/problemset/problem/1701/E
// https://codeforces.com/problemset/status/1701/problem/E?friends=on
func Test_cf1701E(t *testing.T) {
	testCases := [][2]string{
		{
			`6
9 4
aaaaaaaaa
aaaa
7 3
abacaba
aaa
5 4
aabcd
abcd
4 2
abba
bb
6 4
baraka
baka
8 7
question
problem`,
			`5
6
3
4
4
-1`,
		},
	}
	testutil.AssertEqualStringCase(t, testCases, 0, cf1701E)
}

func cf1701E1(in io.Reader, out io.Writer) {
	var T, n, m int
	var s, t []byte
	for Fscan(in, &T); T > 0; T-- {
		Fscan(in, &n, &m, &s, &t)
		f := make([][][3]int, n+1)
		for i := range f {
			f[i] = make([][3]int, m+1)
		}
		
		/*
			f(i,j,k) =
				if i < j: // j == i+1
					return 1e9
				if i < 0:
					if k == 0: return 1
					return 0
				if j >= 0 && s[i] == t[j]:
					k = 0 f(i-1,j-1,0)+1
					k = 1 f(i-1,j-1,1)  过渡
					k = 2 f(i-1,j-1,2)+1  f(i,j,1)=f(i-1,j-1,1)  直接进过渡
				else:
					k = 0 f(i-1,j,0)+2
					k = 1 f(i,j,0)
					k = 2 f(i-1,j,2)+1   f(i,j,0)
		*/

		f[0][0][0] = 1
		for i, x := range s {
			if i < m {
				f[i][i+1] = [3]int{1e9, 1e9, 1e9}
			}
			f[i+1][0][0] = f[i][0][0] + 2
			f[i+1][0][1] = f[i+1][0][0]
			f[i+1][0][2] = f[i][0][2] + 1
			for j, y := range t[:min(i+1, m)] {
				f[i+1][j+1][0] = f[i][j+1][0] + 2
				f[i+1][j+1][1] = f[i+1][j+1][0]
				f[i+1][j+1][2] = min(f[i][j+1][2]+1, f[i+1][j+1][0])
				if x == y {
					f[i+1][j+1][0] = min(f[i+1][j+1][0], f[i][j][0] + 1)
					f[i+1][j+1][1] = min(f[i+1][j+1][1], f[i][j][1])
					f[i+1][j+1][2] = min(f[i+1][j+1][2], f[i][j][2]+1, f[i][j][1])
				}
			}
		}
		ans := f[n][m][2]
		if ans > n {
			ans = -1
		}
		Fprintln(out, ans)
	}
}
