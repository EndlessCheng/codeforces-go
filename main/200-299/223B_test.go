// Generated by copypasta/template/generator_test.go
package main

import (
	"fmt"
	"github.com/EndlessCheng/codeforces-go/main/testutil"
	"io"
	"testing"
)

// https://codeforces.com/problemset/problem/223/B
// https://codeforces.com/problemset/status/223/problem/B?friends=on
func Test_cf223B(t *testing.T) {
	testCases := [][2]string{
		{
			`abab
ab`,
			`Yes`,
		},
		{
			`abacaba
aba`,
			`No`,
		},
		{
			`abc
ba`,
			`No`,
		},
		{
			`ababa
abba`,
			`No`,
		},
		{
			`a
aa`,
			`No`,
		},
	}
	testutil.AssertEqualStringCase(t, testCases, 0, cf223B)
}

func TestCompare_cf223B(_t *testing.T) {
	return
	testutil.DebugTLE = 0
	rg := testutil.NewRandGenerator()
	inputGenerator := func() string {
		//return ``
		rg.Clear()
		rg.Str(1,9,'a','c')
		rg.NewLine()
		rg.Str(1,9,'a','c')
		return rg.String()
	}

	// 暴力算法
	runBF := func(reader io.Reader, writer io.Writer) {
		var s, t string
		fmt.Fscan(reader, &s, &t)

		n := len(s)
		m := len(t)

		g := make([]int, m+1)
		f := map[byte]int{}

		// 预处理 g 数组
		j := n - 1
		for i := m - 1; i >= 0; i-- {
			for j >= 0 && s[j] != t[i] {
				j--
			}
			if j >= 0 {
				g[i] = j
				j--
			} else {
				g[i] = -1
			}
		}
		g[m] = n

		ans := 0
		j = 0
		for i := 0; i < m; i++ {
			for j < n && s[j] != t[i] {
				j++
			}
			if j < n {
				if g[i+1] > j {
					l := max(f[s[j]], j)
					for k := l; k < g[i+1]; k++ {
						if s[k] == s[j] {
							ans++
						}
					}
					if g[i+1] > f[s[j]] {
						f[s[j]] = g[i+1]
					}
				}
				j++
			}
		}

		if ans == n {
			fmt.Fprintln(writer, "Yes")
		} else {
			fmt.Fprintln(writer, "No")
		}
	}
	
	testutil.AssertEqualRunResultsInf(_t, inputGenerator, runBF, cf223B)
}
