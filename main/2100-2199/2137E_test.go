// Generated by copypasta/template/generator_test.go
package main

import (
	"github.com/EndlessCheng/codeforces-go/main/testutil"
	"testing"
)

/*
无 0 -> 全 0 -> 全 1 -> 全 0 -> ...
[0,2,...] -> [0,1,...] -> [0,2,...] -> ...  特判 n=2 的情况
[0,1,2,...] -> [0,1,3,...] -> [0,1,2,...] -> ...  特判 n=2 的情况
[0,1,2,3,...] -> [0,1,2,4,...] -> [0,1,2,3,...] -> ...
[0,0,1,1,2,2,2...] -> [3,3,3,3,...] -> 全 0 -> 全 1 -> 全 0 -> ...
[0,1,1,2,2,2...] -> [0,3,3,3,...] -> [0,1,...] -> [0,2,...] -> ...  特判 n=2 的情况
[0,1,3,3,4] -> [0,1,2,2,2] -> ...
[0,1,2,2,4,5] -> [0,1,3,3,3,3] -> ...

只出现一次的数 -> 不动点
出现次数大于一 -> mex(a)
[0,1,2,2,断...] -> [0,1,3,3,3,3] -> [0,1,2,2,2,2] -> [0,1,3,3,3,3] -> ...
[0,1,断,3,4] -> [0,1,2,2,...]
[0,1,2,2,3,4,4,断,6] -> [0,1,5,5,3,5,5,5] -> [0,1,2,2,...]

// mex == m
if cnt[m] == 0 {
	if n-m == 1 {
		// 012 4 -> 0123 -> 0123 -> ...
		Fprintln(out, m*(m+1)/2)
	} else {
		// 012 44 -> 01233 -> 012 44 -> ...
		Fprintln(out, m*(m-1)/2+(m+1-k%2)*(n-m))
	}
} else {
	Fprintln(out, m*(m-1)/2+(m+k%2)*(n-m))
	// 01233 -> 012 44
	// 01233 5 -> 012 444 同上
	// 012334 6 -> 012 455 同上
}

*/

// https://codeforces.com/problemset/problem/2137/E 1500
// https://codeforces.com/problemset/status/2137/problem/E?friends=on
func Test_cf2137E(t *testing.T) {
	testCases := [][2]string{
		{
			`5
3 3
0 2 1
2 4
0 2
4 1
0 0 1 1
8 7
6 6 2 4 3 0 1 8
2 2
0 0`,
			`3
1
8
25
0`,
		},
	}
	testutil.AssertEqualStringCase(t, testCases, 0, cf2137E)
}
